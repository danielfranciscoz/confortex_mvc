@{
    ViewBag.Title = "Combinaciones";
}
<style>
    #table2_filter{
         display: none;
    }

     #table3_filter{
         display: none;
    }
     #table3_paginate{
         display: none;
    }
        #table2_paginate{
         display: none;
    }

</style>


<ng-controller ng-controller="ConCombinacion">

    <div class="card card-block rounded smooth-scroll">
        <h4 class="h4-responsive  font-weight-bold">Combinaciones</h4>
        
        <div class="table-responsive " >
            <table class="table table-hover  table-bordered table-striped" id="table1">
                <thead class="light-green  white-text">
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                           Combinación
                        </th>
                        <th>
                          Descripción
                        </th>
                        <th>
                            Cantidad de Tela (Yardas)
                        </th>
                        <th>
                            Total M.O (C$)
                        </th>


                    </tr>
                </thead>

                <tbody ng-click="get()"></tbody>

            </table>

        </div>
        <hr />
        <div class="" >
            <h6 class="h6-responsive  font-weight-bold">Actividades de la combinación </h6>
            <table class="table table-hover  table-bordered table-striped" id="table2">
                <thead class="light-green  white-text">
                    <tr>
                        <th>
                            Id
                        </th>
                        <th>
                            Combinación
                        </th>
                        <th>
                           Actividad
                        </th>
                        <th>
                            Duración (Minutos)
                        </th>
                        <th>
                            Precio M.O (C$)
                        </th>


                    </tr>
                </thead>

                <tbody ng-click="get()"></tbody>

            </table>

        </div>

        <div class="fixed-action-btn" style="bottom: 45px; right: 24px;">
            <a class="btn-floating btn-large green darken-4 ">
                <i class="fa fa-cogs"></i>
            </a>

            <ul>
                <li><a class="btn-floating green" data-animation="false" ng-click="nuevo()" data-tooltip=tooltip data-placement="left" title="Agregar combinación "><i class="fa fa-plus"></i></a></li>
                <li><a class="btn-floating yellow darken-1" data-animation="false" ng-click="editar()" data-tooltip=tooltip data-placement="left" title="Edita la combinación seleccionada."><i class="fa fa-pencil"></i></a></li>
                <li><a class="btn-floating red" data-animation="false" ng-click="eliminar()" data-tooltip=tooltip data-placement="left" title="Elimina la combinación seleccionada."><i class="fa fa-trash-o"></i></a></li>

            </ul>
        </div>  
    </div>
    @Html.Action("Create", "Combinaciones")
    @Html.Action("DeleteGeneral", "Home");
</ng-controller>
<script>

    app.controller('ConCombinacion', function ($scope, $http) {
        $scope.idcombinacion = 0;
        $scope.rowc = 0;
        $scope.nombre = "";
        $scope.descripcion = "";
        $scope.precio = "";
       

        var table = "";
        var tabled = "";
        var tablec = "";
        var tablecn = "";
        $(document).ready(function () {
            $('[data-tooltip=tooltip]').tooltip();
            $('[data-toggle=tab]').tooltip();

            table = $('#table1').DataTable({
                select: true,
                "processing": true,
                "serverSide": true,
                "orderMulti": false,
                "ajax": {
                    "url": "../Combinaciones/searchCombinaciones",
                    "type": "POST",
                    "dataType": "JSON"

                },
                "columns": [
                    { "data": "IdCombinacion", "name": "IdCombinacion", visible: false },
                    { "data": "Nombre", "name": "Nombre" },
                      { "data": "Descripcion", "name": "Descripcion" },
                          { "data": "CantidadTela", "name": "CantidadTela" },
                          { "data": "PrecioUnitario", "name": "PrecioUnitario" }

                ],
                "language": {
                    "lengthMenu": "Mostrando _MENU_ Entradas por página",
                    "zeroRecords": "Lo sentimos, no se encuentran concidencias",
                    "info": "Mostrando Página _PAGE_ de _PAGES_ (Registros Totales _TOTAL_)",
                    "infoEmpty": "No hay entradas Disponibles",
                    "infoFiltered": "(filtrar por _MAX_ total entradas)",
                    "search": "Buscar",
                    "paginate": {
                        "previous": "Anterior",
                        "next": "Siguiente"
                    }, "select": {
                        rows: " "
                    }
                }

            });


            tabled = $('#table2').DataTable({
                select: true,
                "processing": true,
                "serverSide": true,
                "orderMulti": false,
                "searching": true,
                "bFilter": false,
                bInfo: false,
                "bLengthChange": false,
                "ajax": {
                    "url": "../Combinaciones/searchCombinacionFuncion",
                    "type": "POST",
                    "dataType": "JSON"

                },
                "columns": [
                    
                    { "data": "IdPrecioCombinacion", "name": "IdPrecioCombinacion", visible: false },
                      { "data": "IdCombinacion", "name": "IdCombinacion", visible: false },
                    { "data": "NombreFuncion", "name": "NombreFuncion" },
                    { "data": "Duracion", "name": "Duracion" },
                    { "data": "PrecioUnitario", "name": "PrecioUnitario" }

                ],
                "language": {
                    "lengthMenu": "Mostrando _MENU_ Entradas por pagina",
                    "zeroRecords": "Lo sentimos, no se encuentran concidencias",
                    "info": "Mostrando Página _PAGE_ de _PAGES_ (Registros Totales _TOTAL_)",
                    "infoEmpty": "No hay entradas Disponibles",
                    "infoFiltered": "(filtrar por _MAX_ total entradas)",
                    "search": "Buscar",
                    "paginate": {
                        "previous": "Anterior",
                        "next": "Siguiente"
                    }, "select": {
                        rows: " "
                    }
                }

            });
            tablec = $('#table3').DataTable({
                select: true,
                "orderMulti": false,
                "searching": true,
                "bFilter": false,
                bInfo: false,
                "bLengthChange": false,
                "columnDefs": [
                    {
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    },
                    {
                        "targets": [1],
                        "visible": false
                    }
                ],
                "language": {

                    "zeroRecords": "No ha agregado actividades"
                }

            });


           tabled.search("dd21").draw();
           tablecn = tablec;
        });

       
    
    

    


        $scope.get = function () {
          
            setTimeout(function () {
                var idt = table.row('.selected').index();
                $scope.idcombinacion = table.cell(idt, 0).data();
                $scope.nombre = table.cell(idt, 1).data();
                $scope.descripcion = table.cell(idt, 2).data();
                $scope.cantidadtela = table.cell(idt, 3).data();
                toastr['success']('Actualmente esta seleccionando la combinacion ' + $scope.nombre);
                tabled.search($scope.idcombinacion).draw();
                tablec.clear().draw();
                setTimeout(function () {
                    var TamTab = tabled.column(0).data().length;
                    for (var i = 0; i < TamTab; i++) {
                        tablec.row.add([tabled.cell(i, 0).data(), tabled.cell(i, 1).data(), tabled.cell(i, 2).data(), tabled.cell(i, 3).data(),tabled.cell(i, 4).data()]).draw();
                    }
                }, 100);
           
            }, 100);
            
        };
        $scope.get2 = function () {

            setTimeout(function () {
                $scope.rowc = tablec.row('.selected').index();
                toastr['success']('Actualmente esta seleccionando la actividad ' + tablec.cell($scope.rowc, 2).data());
              

            }, 100);
        };

       
        //var duracion = [10,11, 12];
        //var NombreFuncion = ["Cortado", "Armado", "Cortado"];
        //var idcombinacion = [0, 0, 0];
        //var idPrecioFuncion = [0, 0, 0];
        //var reg = [false, false, false];
        //var PrecioFuncion = new Array(idPrecioFuncion,idcombinacion,NombreFuncion,duracion)

        //$scope.PrecioFuncion.IdPrecioFuncion = 0;
        //$scope.PrecioFuncion.IdCombinacion = 0;
        //$scope.PrecioFuncion.NombreFuncion = "Cortado";
        //$scope.PrecioFuncion.Duracion = 10;


      
        $scope.EsPrecio = function () {
            $scope.precio = NoLetras($scope.precio);
        }
        $scope.EsCantidad = function () {
         
            $scope.cantidad = Telefono($scope.cantidad);
        }
        $scope.EsCantidadTela = function () {

            $scope.cantidadtela = NoLetras($scope.cantidadtela);
        }

        $scope.agregartab = function () {
            if ($scope.cantidad > 0 &&
                $scope.precio > 0
                ) {
                var tempc = $scope.cantidad;
                $scope.idpf = 0;
                var TamTab = tablec.column(0).data().length;
                for (var i = 0; i < TamTab; i++) {
                    if (tablec.cell(i, 2).data() == $scope.funcion) {
                        $scope.idpf = tablec.cell(i, 0).data();
                        tablec.row(i).remove().draw();
                    }
                   
                }
                tablec.row.add([$scope.idpf, $scope.idcombinacion, $scope.funcion, $scope.cantidad,$scope.precio]).draw();

            } else {

                $scope.messageCant = "Error debe seleccionar una actividad y una cantidad mayor que 0 (Cero)";
            }

          
        }

        $scope.abrirmodal = function () {
            $scope.funcion = "Armado";
            $('#modalcombinacioncreate').modal({
                show: true
            });
        }

        $scope.nuevo = function () {

            if ($scope.idcombinacion == 0) {
                $scope.abrirmodal();
            } else {
                $scope.clean();
                $scope.abrirmodal();
            }

        };

        $scope.gestionar = function () {
            if ($scope.idcombinacion > 0) {
                $scope.modificar();
            } else {
                $scope.guardar();
            }

        }

        $scope.editar = function () {

            if ($scope.idcombinacion > 0) {
                $scope.abrirmodal();
            }
        };
    
        $scope.guardar = function () {
            $scope.PrecioFuncion = "[";
            $scope.tempt = tablec.column(0).data().length
            for (var i = 0; i < $scope.tempt; i++) {
                $scope.PrecioFuncion = $scope.PrecioFuncion + '{ "IdPrecioCombinacion": ' + tablec.cell(i, 0).data() + ', "IdCombinacion":' + tablec.cell(i, 1).data() + ', "NombreFuncion": "' + tablec.cell(i, 2).data() + '", "Duracion" :' + tablec.cell(i, 3).data() + ', "PrecioUnitario": ' + tablec.cell(i, 4).data() + '}';
                if (i < $scope.tempt - 1) {
                    $scope.PrecioFuncion = $scope.PrecioFuncion + ",";
                }
            }
            $scope.PrecioFuncion = $scope.PrecioFuncion + "]";          
            var j = JSON.parse($scope.PrecioFuncion);         
            var parameter = JSON.stringify({ Nombre: $scope.nombre, Descripcion: $scope.descripcion, CantidadTela: $scope.cantidadtela, "PrecioCombinacion": j });
         
            console.log(parameter);

            if ($scope.nombre.length > 0 &&
                $scope.cantidadtela.length > 0 &&
                $scope.descripcion.length > 0 &&
                     $scope.tempt > 0
                ) {
            $http({
                url: "../Combinaciones/Create",
                method: "POST",
                data: parameter,
                headers: { 'Content-Type': 'application/json' }
            }).then(function (response) {
                if (response.data.Message == "Exito") {
                    $('#modalcombinacioncreate').modal('hide');

                } else {
                    $scope.message = "Error: " + response.data.Message;

                }

            }, function (response) {
                $scope.message = "Error: No se puede Generar la consulta: " + response.status;
            });
        } else {
            toastr['warning']('Revise el nombre,descripcion, cantidad,precio y las actividades de la combinacion');
        }
        };

        $scope.modificar = function () {

            $scope.nombre = $scope.nombre + "";
            $scope.descripcion = $scope.descripcion + "";
            $scope.cantidadtela = $scope.cantidadtela + "";
            $scope.PrecioFuncion = "[";
            $scope.tempt = tablec.column(0).data().length
            for (var i = 0; i < $scope.tempt; i++) {
                $scope.PrecioFuncion = $scope.PrecioFuncion + '{ "IdPrecioCombinacion": ' + tablec.cell(i, 0).data() + ', "IdCombinacion":' + tablec.cell(i, 1).data() + ', "NombreFuncion": "' + tablec.cell(i, 2).data() + '", "Duracion" :' + tablec.cell(i, 3).data() + ', "PrecioUnitario": ' + tablec.cell(i, 4).data() + '}';
                if (i < $scope.tempt - 1) {
                    $scope.PrecioFuncion = $scope.PrecioFuncion + ",";
                }
            }
            $scope.PrecioFuncion = $scope.PrecioFuncion + "]";        
            var j = JSON.parse($scope.PrecioFuncion);          
            var parameter = JSON.stringify({ IdCombinacion: $scope.idcombinacion, Nombre: $scope.nombre, Descripcion: $scope.descripcion, CantidadTela: $scope.cantidadtela, "PrecioCombinacion": j });
           

            console.log(parameter);

            if ($scope.nombre.length > 0 &&
                $scope.cantidadtela.length > 0 &&               
                     $scope.tempt > 0
                ) {
                $http({
                    url: "../Combinaciones/Edit",
                    method: "POST",
                    data: parameter,
                    headers: { 'Content-Type': 'application/json' }
                }).then(function (response) {
                    if (response.data.Message == "Exito") {
                        $('#modalcombinacioncreate').modal('hide');

                    } else {
                        $scope.message = "Error: " + response.data.Message;

                    }

                }, function (response) {
                    $scope.message = "Error: No se puede Generar la consulta: " + response.status;
                });
            } else {
                toastr['warning']('Revise el nombre, cantidad,precio y las actividades de la combinacion');
            }
        };

      
        $scope.clean = function () {
            $scope.message = "";
            $scope.rowc = 0;
            $scope.cantidad = 0;
            $scope.messageCant = "";
            $scope.cantidadtela = 0;
            $scope.idcombinacion = 0;
            $scope.nombre = "";
            $scope.descripcion = "";
            $scope.precio = 0;
            setTimeout(function () {

                tablec.clear().draw();
                $('#table1').DataTable().ajax.reload();
                tabled.search("dd21").draw();

            }, 100);


        }

        $scope.eliminar = function () {
            if ($scope.idcombinacion > 0) {
                $('#Modaldelete').modal({
                    show: true
                });
            }
        }

        $scope.eliminartab = function () {
            if ($scope.rowc >= 0) {
                tablec.row($scope.rowc).remove().draw();
               
            }
        }

        $scope.anular = function () {
            $http({
                url: "../Combinaciones/Delete",
                method: "POST",
                data: $.param({ "id": $scope.idcombinacion }),
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
            }).then(function (response) {
                if (response.data.Message == "Exito") {
                    $('#Modaldelete').modal('hide');

                } else {
                    $scope.message = "Error: " + response.data.Message;

                }

            }

    )
        };

        $('#modalcombinacioncreate').on('hidden.bs.modal', function (e) {

            $scope.clean();

        });
        $('#Modaldelete').on('hidden.bs.modal', function (e) {
            $scope.clean();
        });

    });

   
</script>